name: Deploy Web App

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      build-new-version:
        description: 'Build now and deploy the app'
        default: 'true'
        required: false

jobs:
  build-and-deploy-app:
    runs-on: ubuntu-latest
    env:
      COMMIT_SHA: ${{ github.sha }}

    steps:
      - uses: actions/checkout@v3

      - name: Docker meta data for image
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/frontend-app
          tags: |
            type=raw,value=${{ env.COMMIT_SHA }}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value={{date 'DD/MM/YYYY'}}
          labels: |
            org.label-schema.vcs-ref=${{ env.SHORT_SHA }}
            org.label-schema.vcs-branch=${{ github.head_ref || github.base_ref }}
            org.label-schema.build-date={{date 'YYYY-MM-DDTHH:mm:ssZ'}}
            org.label-schema.vcs-url=${{ github.server_url }}/${{ github.repository }}

      - name: Print docker metadata fields
        run: |
          echo "Docker metadata tags: ${{ steps.meta.outputs.tags }}"

      - name: Docker login
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker build and push
        uses: docker/build-push-action@v6
        with:
          context: ./ucrconnect-dashboard
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Delete all stoped and unused docker artifacts in production server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOYMENT_SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker system prune -a -f

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOYMENT_SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            mkdir -p ~/app
            # Create the .env file with secrets
            echo "${{ secrets.FIREBASE_ENV_FILE }}" > ~/app/ucrconnect-dashboard/.env
            echo "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}" >> ~/app/ucrconnect-dashboard/.env
            cd ~/app/ucrconnect-dashboard
            # Pull the built image and run it
            docker pull ${{ secrets.DOCKER_USERNAME }}/frontend-app:${{ env.COMMIT_SHA }}
            docker stop frontend-app || true
            docker rm frontend-app || true
            docker run --env-file ucrconnect-dashboard/.env -d --name frontend-app -p 3001:3000 ${{ secrets.DOCKER_USERNAME }}/frontend-app:${{ env.COMMIT_SHA }}
            # Check the container is up and running, if not then fail workflow
            if ! docker ps --filter "name=frontend-app" --filter "status=running" --format '{{.Names}}' | grep -w frontend-app ; then
              echo "Container is not running, exiting..."
              exit 1
            fi


